package com.danielnamur.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.danielnamur.model.Task;
import com.danielnamur.services.TaskService;

@RestController
@RequestMapping("/api")
@CrossOrigin
public class TaskController {
	
	@Autowired
	private TaskService taskService;
	
    @GetMapping
    ResponseEntity<List<Task>> tasks(){
        List<Task> tasks = taskService.tasks();
        return ResponseEntity.ok(tasks);
    }

    @GetMapping("/{id}")
    ResponseEntity<Task>  searchTask(@PathVariable Long id) {
        Task result = taskService.findById(id);
        return ResponseEntity.ok(result);
    }


    @PostMapping
    ResponseEntity<Task> addTask(@RequestBody Task task){
        Task createdTask = taskService.save(task);
        return ResponseEntity.status(HttpStatus.CREATED).body(createdTask);
    }

    @PutMapping
    ResponseEntity<Task> editTask(@RequestBody Task task){
        Task updatedTask = taskService.save(task);
        return ResponseEntity.ok(updatedTask);
    }

    @DeleteMapping("/{id}")
    ResponseEntity deleteTask(@PathVariable Long id) {
        taskService.delete(id);
        return ResponseEntity.noContent().build();
    }
}
